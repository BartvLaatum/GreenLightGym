GreenLightBase:
    weatherDataDir: "environments/data/" # path to the weather data file
    location: "Amsterdam"   # location of the weatherdata
    dataSource: "KNMI"      # which data source we use
    nx: 28                  # Number of states
    nu: 8                   # number of control variables for GreenLight
    nd: 10                  # weather variables
    noLamps: 0              # whether lamps are used
    ledLamps: 1             # whether led lamps are used
    hpsLamps: 0             # whether hps lamps are used
    intLamps: 0             # whether int lamps are used
    dmfm: 0.0627            # dry matter fresh matter ratio
    h: 1                    # stepsize for the RK4 solver
    seasonLength: 1        # number of growing days
    predHorizon: 0       # prediction horizon in days.
    timeinterval: 900       # [s] time interval at what rate do we observe and control the environment
    controlSignals: ["uCO2"]   # list with all control inputs we aim to control/learn
    modelObsVars: 6         # number of variables we observe from the model
    weatherObsVars: 5       # number of weather variables we observe
    obsLow:  [15, 300, 60]  # lower bound for the observation space
    obsHigh: [35, 1200, 90] # upper bound for the observation space
    rewardCoefficients: []  # coefficients for the costs function
    penaltyCoefficients: [.0, !!float 1e-10, .0] # coefficients for the penalty function

GreenLightCO2:
    cLeaf: !!float 2.5e5
    cStem: !!float 0.9e5
    cFruit: !!float 2.8e5
    tCanSum: 1035
    tomatoPrice: 1.2
    co2Price: 0.1

options:                    # Options for the the evaluation date 
    startDay: 0             # day since 01-feb for starting the episode
    growthYear: 2011        # year in which we start growing season

state_columns: ["Air Temperature", "CO2 concentration", "Humidity", "Fruit weight", "Fruit harvest", "PAR"]
action_columns: ["uBoil", "uCO2", "uThScr", "uVent", "uLamp", "uIntLamp", "uGroPipe", "uBlScr"]


PPO:
  policy: MlpPolicy
  learning_rate: !!float 3e-5
  n_steps: 128                  # we update after n_steps calls of step() function. in the case of 10 envs --> 1280 timesteps are taken (equals to 10 days)
  batch_size: 64
  n_epochs: 10
  gamma: 0.99
  gae_lambda: 0.95
  clip_range: 0.2
  normalize_advantage: True
  ent_coef: 0.0
  vf_coef: 0.5
  max_grad_norm: 0.5
  use_sde: False
  sde_sample_freq: -1
  target_kl: null

  policy_kwargs: {net_arch: {pi: [32, 32], vf: [256, 256]},
                  optimizer_class: ADAM,
                  optimizer_kwargs: {amsgrad: True},
                  activation_fn: Tanh
          }
