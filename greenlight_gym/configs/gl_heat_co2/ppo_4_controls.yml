GreenLightBase:
    weatherDataDir: "envs/data/" # path to the weather data file
    location: "Amsterdam"   # location of the weatherdata
    dataSource: "KNMI"      # which data source we use
    nx: 28                  # Number of states
    nu: 8                   # number of control variables for GreenLight
    nd: 10                  # weather variables
    noLamps: 0              # whether lamps are used
    ledLamps: 1             # whether led lamps are used
    hpsLamps: 0             # whether hps lamps are used
    intLamps: 0             # whether int lamps are used
    dmfm: 0.0627            # dry matter fresh matter ratio
    h: 1                    # stepsize for the RK4 solver
    seasonLength: 5         # number of growing days
    predHorizon: !!float 0.01158    # prediction horizon in days.
    timeinterval: 900       # [s] time interval at what rate do we observe and control the environment
    controlSignals: ["uBoil", "uCO2", "uThScr", "uVent"] # list with all control inputs we aim to control/learn
    modelObsVars: 8         # number of variables we observe from the model
    weatherObsVars: 5       # number of weather variables we observe
    obsLow:  [15, 0, 60]  # lower bound for the observation space
    obsHigh: [35, 1000, 85] # upper bound for the observation space
    training: True

GreenLightHeatCO2:
    cLeaf: !!float 2.5e5        # [DW] mg/m2
    cStem: !!float 0.9e5        # [DW] mg/m2
    cFruit: !!float 2.8e5       # [DW] mg/m2
    tCanSum: 1035               # Temperature sum for canopy development
    tomatoPrice: 1.6            # €/[FW] kg
    co2Price: 0.1              # €/kg
    gasPrice: 0.35              # €/m3
    energyContentGas: 31.65     # MJ/m3
    pbands: [0.5, 100, 2]
    k: [1, 1.e-3, 0.1]

options:                    # Options for the the evaluation date 
    startDay: 59             # day since 01-feb for starting the episode
    growthYear: 2011        # year in which we start growing season

state_columns: ["Air Temperature", "CO2 concentration", "Humidity", "Fruit weight", "Fruit harvest", "PAR", "CO2 resource", "Gas resource"]
action_columns: ["uBoil", "uCO2", "uThScr", "uVent", "uLamp", "uIntLamp", "uGroPipe", "uBlScr"]

PPO:
  policy: MlpPolicy
  learning_rate: !!float 2.231e-4   
  n_steps: 480      # we update after n_steps calls of step() function. in the case of 10 envs --> 1280 timesteps are taken (equals to 10 days)
  batch_size: 64
  n_epochs: 7 
  gamma: 0.95
  gae_lambda: 0.95
  gae_lambda: 0.95
  clip_range: 0.3
  normalize_advantage: True
  ent_coef: 0.01
  vf_coef: 0.5
  max_grad_norm: 0.5
  use_sde: False
  sde_sample_freq: -1
  target_kl: null

  policy_kwargs: {net_arch: {pi: [256, 256], vf: [256, 256]},
                  optimizer_class: ADAM,
                  optimizer_kwargs: {amsgrad: True},
                  activation_fn: ELU,
                  log_std_init: np.log(0.5) # Results in standard deviation of 0.5 since exp(log(0.5)) = 0.5
          }
